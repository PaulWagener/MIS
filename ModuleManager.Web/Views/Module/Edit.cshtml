@model ModuleManager.Web.ViewModels.ModuleEditViewModel

@{
    HashSet<String> selected = new HashSet<string>();

    Model.Options.Filter(Model.Module);
}



<ol class="breadcrumb">
    <li><a href="@Url.Action("Index", "Home")">Home</a></li>
    <li><a href="@Url.Action("Overview", "Module")">Module-overzicht</a></li>
    <li><a href="@Url.Action("Details", "Module", new { schooljaar = Model.Module.Schooljaar, cursusCode = Model.Module.CursusCode })">@Model.Module.Naam</a></li>
    <li>Bewerken</li>
</ol>

<h2>Module bewerken</h2>

@if (!ViewData.ModelState.IsValid)
{
    @Html.ValidationSummary(false, "", new { @class = "col-md-12 validation-summary" })
}

<form id="module_edit_form" action="@Url.Action("Edit", "Module", new { schooljaar = Model.Module.Schooljaar, cursusCode = Model.Module.CursusCode })" method="post">
@using (Html.BeginForm())
{
    <div id="hidden-values">
        @Html.HiddenFor(model => model.Module.CursusCode, new { @id = "cursuscode" })
        @Html.HiddenFor(model => model.Module.Schooljaar, new { @id = "schooljaar" })
        @Html.HiddenFor(model => model.Module.Naam)
        @Html.HiddenFor(model => model.Module.Icon)

        <div id="hidden-leerlijnen"></div>
        <div id="hidden-voorkennis"></div>
        <div id="hidden-tags"></div>
        <div id="hidden-kwaliteitskenmerken"></div>
        <div id="hidden-docenten"></div>
        <div id="hidden-werkvormen"></div>
    </div>

    <table class="table">
        <tr><td><label for="tags">Naam</label></td></tr>
        <tr>
            <td>
                <input type="text" class="form-control" id="Module_Naam" placeholder="Naam" name="Module.Naam" value="@Model.Module.Naam" disabled="disabled">
            </td>
        </tr>
    </table>
    <table class="table">
        <tr><td><label for="tags">Beschrijving</label></td></tr>
        <tr>
            <td>
                @Html.TextAreaFor(m => m.Module.Beschrijving, new { @class="form-control", placeholder="Beschrijving" })
            </td>
        </tr>
    </table>
    <table class="table">
        <tr><td><label>Leerlijnen</label></td></tr>
        <tr>
            <td>
                @Html.DropDownList("leerlijnen", new MultiSelectList(Model.Options.Leerlijnen, "Naam", "Naam", Model.Module.Leerlijnen.Select(m => m.Naam)), new { @id = "leerlijnen", @multiple = "multiple", @class = "form-control" })
            </td>
        </tr>
    </table>
    <table class="table">
        <tr><td><label for="Tags">Tags</label></td></tr>
        <tr>
            <td>
                @Html.DropDownList("Tags", new MultiSelectList(Model.Options.Tags, "Naam", "Naam", Model.Module.Tags.Select(m => m.Naam)), new { @id = "tags", @multiple = "multiple", @class = "form-control" })
            </td>
        </tr>
    </table>
    <table class="table">
        <tr><td><label for="voorkennis">Voorkennis</label></td></tr>
        <tr>
            <td>
                @Html.DropDownList("Voorkennis", new MultiSelectList(Model.Options.VoorkennisModules, "CursusCode", "Naam", Model.Module.Voorkennis.Select(m => m.CursusCode)), new { @id = "voorkennis", @multiple = "multiple", @class = "form-control" })
            </td>
        </tr>
    </table>
    <table class="table">
        <tr><td><label for="docenten">Docenten</label></td></tr>
        <tr>
            <td>
                @Html.DropDownList("Docenten", new MultiSelectList(Model.Options.Docenten, "Id", "Naam", Model.Module.Docenten.Select(m => m.Id)), new { @id = "docenten", @multiple = "multiple", @class = "form-control" })
            </td>
        </tr>
    </table>
    <div class="form-group">
        <label for="general-information">Leerdoelen</label>
        <table class="table table-bordered table-center table-striped" id="leerdoelen">
            @LeerdoelRowTemplate()
            @for (int i = 0; i < Model.Module.Leerdoelen.Count; i++)
            {
                @LeerdoelRowTemplate(i, Model.Module.Leerdoelen[i])
            }
            <tr>
                <td style="width: 90px; text-align:right; padding-right:30px" colspan="5">
                    <button class="btn btn-success" type="button" id="btn_AddLeerdoel"><i class="fa fa-plus add_row"></i></button>
                </td>
            </tr>
        </table>
    </div>
    <div class="form-group">
        <label for="general-information">Algemene informatie</label>
        <table class="table table-bordered table-center table-striped">
            <tbody>
                <tr>
                    <th><label for="werkvorm">Werkvorm</label></th>
                    <td>
                        <select name="werkvorm" class="form-control" id="werkvorm" multiple>
                            @foreach (var werkvorm in Model.Options.Werkvormen)
                            {
                                if (Model.Module.ModuleWerkvormen.Any(mwv => mwv.WerkvormType == werkvorm.Type))
                                {
                                    <option class="werkvorm_option" data-type="@werkvorm.Type" selected="selected" value="@werkvorm.Type">@werkvorm.Omschrijving</option>
                                }
                                else
                                {
                                    <option class="werkvorm_option" data-type="@werkvorm.Type" value="@werkvorm.Type">@werkvorm.Omschrijving</option>

                                }
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <th>Organisatie</th>
                    <td>
                        <table class="table table-bordered" id="organisatie">
                            <thead>
                                <tr>
                                    <th data-skipremove="true" width="20px">Werkvorm</th>
                                    <th data-skipremove="true">Organisatie</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var werkvorm in Model.Module.ModuleWerkvormen)
                                {
                                    <tr data-type="@werkvorm.WerkvormType">
                                        <td>@Html.EditorFor(item => werkvorm.WerkvormType, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })</td>
                                        <td>@Html.EditorFor(item => werkvorm.Organisatie, new { htmlAttributes = new { @class = "form-control orgDesc" } })</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </td>
                </tr>
                <tr>
                    <th>Studiebelasting</th>
                    <td>
                        <table class="table table-bordered" id="sb">
                            <thead>
                                <tr>
                                    <th>Activiteit</th>
                                    <th>Duur</th>
                                    <th>Frequentie</th>
                                    <th>Uren</th>
                                    <th>SBU</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Module.StudieBelastingen.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Html.EditorFor(model => model.Module.StudieBelastingen[i].Activiteit, new { htmlAttributes = new { @class = "form-control" } })
                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.Module.StudieBelastingen[i].Duur, new { htmlAttributes = new { @class = "form-control" } })
                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.Module.StudieBelastingen[i].Frequentie, new { htmlAttributes = new { @class = "form-control" } })
                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.Module.StudieBelastingen[i].ContactUren, new { htmlAttributes = new { @class = "form-control" } })
                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.Module.StudieBelastingen[i].SBU, new { htmlAttributes = new { @class = "form-control SBU" } })

                                            <input type="hidden" name="Module.StudieBelastingen.Index" value="@i" />
                                            @Html.HiddenFor(item => Model.Module.StudieBelastingen[i].CursusCode, new { @class = "form-control" })
                                            @Html.HiddenFor(item => Model.Module.StudieBelastingen[i].Schooljaar, new { @class = "form-control" })
                                        </td>
                                        <td style="width: 90px; text-align:center">
                                            <a class="btn btn-danger btn-sm remove_row"><i class="fa fa-trash"></i></a>
                                        </td>
                                    </tr>
                                }

                                <tr>
                                    <td colspan="3"></td>
                                    <th>Totaal</th>
                                    <td><span id="SBUTotal"></span></td>
                                    <td style="width: 90px; text-align:right; padding-right:30px">
                                        <button data-target="sb" data-columns="5" data-collectionname="StudieBelastingen" data-properties='["Activiteit", "Duur", "Frequentie", "ContactUren", "SBU"]' data-nextindex="@Model.Module.StudieBelastingen.Count" class="btn btn-success btn-sm row_add" type="button"><i class="fa fa-plus"></i></button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                </tr>
                <tr>
                    <th>Weekplanning</th>
                    <td>
                        <table class="table table-bordered" id="wp">
                            <thead>
                                <tr>
                                    <th>Week</th>
                                    <th>Onderwerpen</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Module.Weekplanningen.Count; i++)
                                {
                                    <tr>
                                        <td style="width:80px;">@Html.EditorFor(item => Model.Module.Weekplanningen[i].Week, new { htmlAttributes = new { @class = "form-control" } })</td>
                                        <td>
                                            @Html.EditorFor(item => Model.Module.Weekplanningen[i].Onderwerp, new { htmlAttributes = new { @class = "form-control" } })

                                            <input type="hidden" name="Module.Weekplanningen.Index" value="@i" />
                                            @Html.HiddenFor(item => Model.Module.Weekplanningen[i].CursusCode, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.HiddenFor(item => Model.Module.Weekplanningen[i].Schooljaar, new { htmlAttributes = new { @class = "form-control" } })
                                        </td>
                                        <td style="width: 90px; text-align:center">
                                            <a class="btn btn-danger btn-sm remove_row"><i class="fa fa-trash"></i></a>
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td style="width: 90px; text-align:right; padding-right:30px" colspan="5">
                                        <button data-target="wp" data-columns="2" data-collectionname="Weekplanningen" data-properties='["Week", "Onderwerp"]' data-nextindex="@Model.Module.Weekplanningen.Count" class="btn btn-success btn-sm row_add" type="button"><i class="fa fa-plus"></i></button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                </tr>
                <tr>
                    <th>Beoordeling</th>
                    <td>
                        <table class="table table-bordered" id="beoordelingen">
                            <thead>
                                <tr>
                                    <th>Beoordelingen</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Module.Beoordelingen.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Html.EditorFor(item => Model.Module.Beoordelingen[i].Beschrijving, new { htmlAttributes = new { @class = "form-control" } })

                                            <input type="hidden" name="Module.Beoordelingen.Index" value="@i" />
                                            @Html.HiddenFor(item => Model.Module.Beoordelingen[i].CursusCode, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.HiddenFor(item => Model.Module.Beoordelingen[i].Schooljaar, new { htmlAttributes = new { @class = "form-control" } })
                                        </td>
                                        <td style="width: 90px; text-align:center">
                                            <a class="btn btn-danger btn-sm remove_row"><i class="fa fa-trash"></i></a>
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td style="width: 90px; text-align:right; padding-right:30px" colspan="5">
                                        <button data-target="beoordelingen" data-columns="1" data-collectionname="Beoordelingen" data-properties='["Beschrijving"]' data-nextindex="@Model.Module.Beoordelingen.Count" class="btn btn-success row_add" type="button"><i class="fa fa-plus"></i></button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                </tr>
                <tr>
                    <th>Leermiddelen</th>
                    <td>
                        <table class="table table-bordered" id="leermiddelen">
                            <thead>
                                <tr>
                                    <th>Leermiddelen</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Module.Leermiddelen.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Html.EditorFor(item => Model.Module.Leermiddelen[i].Beschrijving, new { htmlAttributes = new { @class = "form-control" } })

                                            <input type="hidden" name="Module.Leermiddelen.Index" value="@i" />
                                            @Html.HiddenFor(item => Model.Module.Leermiddelen[i].CursusCode, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.HiddenFor(item => Model.Module.Leermiddelen[i].Schooljaar, new { htmlAttributes = new { @class = "form-control" } })
                                        </td>
                                        <td style="width: 90px; text-align:center">
                                            <a class="btn btn-danger btn-sm remove_row"><i class="fa fa-trash"></i></a>
                                        </td>
                                    </tr>
                                }
                                <tr class=".leermiddel_add">
                                    <td style="width: 90px; text-align:right; padding-right:30px" colspan="5">
                                        <button data-target="leermiddelen" data-columns="1" data-collectionname="Leermiddelen" data-properties='["Beschrijving"]' data-nextindex="@Model.Module.Leermiddelen.Count" class="btn btn-success row_add" type="button"><i class="fa fa-plus"></i></button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                </tr>
                <tr>
                    <th>Status</th>
                    <td>
                        @Html.DropDownListFor(item => item.Module.Status, selectList: Model.Options.Statussen.Select(s => new SelectListItem { Value = s.Status1, Text = s.Status1 }), htmlAttributes: new { @class = "form-control" })
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <button name="afterSubmit" value="stay" type="submit" class="btn btn-success btn-lg">Opslaan</button>
    <button name="afterSubmit" value="close" class="btn btn-success btn-lg">Opslaan & Sluiten</button>
    <a href="@Url.Action("Details", "Module", new { schooljaar = Model.Module.Schooljaar, cursusCode = Model.Module.CursusCode })" class="btn btn-default">Annuleren</a>
</form>

<!-- Help MODAL-->
@Html.Partial("~/Views/Help/ModuleEdit.cshtml", null)

@helper LeerdoelRowTemplate(int? index = null, ModuleManager.Web.ViewModels.EntityViewModel.LeerdoelenViewModel ld = null) {
    string indexString = index.HasValue ? index.ToString() : "<<index>>";

    <tr class="leerdoelTemplate @(ld == null ? "hiddenLeerdoel" : "")">
        <th>
            <p><label>Een student kan...</label></p>
            <p><label>Competenties</label><br /></p>
        </th>
        <td>
            <p>
                <input class="form-control text-box single-line" id="Module_Leerdoelen_@(indexString)__Beschrijving" name="Module.Leerdoelen[@(indexString)].Beschrijving" type="text" value="@(ld != null ? ld.Beschrijving : "")" placeholder="Een student kan...">
            </p>
            <p>
                @if (ld != null)
                {
                    @Html.DropDownList("Kwaliteitskenmerken", new MultiSelectList(Model.Options.Kwaliteitskenmerken, "Id", "Omschrijving"
                                                 , Model.Module.Leerdoelen[index.Value].Kwaliteitskenmerken.Select(kk => kk.Id))
                                                 , new { @class = "kwaliteitskenmerken form-control", @multiple = "multiple" })
                }
                    else
                    {
                    <select class="kwaliteitskenmerken form-control" id="Kwaliteitskenmerken" multiple="multiple" name="Kwaliteitskenmerken">
                        @foreach (var kk in Model.Options.Kwaliteitskenmerken)
                        {
                            <option value="@kk.Id">@kk.Omschrijving</option>
                        }
                    </select>
                }
            </p>
        </td>
        <td style="width: 90px; text-align:center">
            <a class="btn btn-danger btn-sm remove_row"><i class="fa fa-trash"></i></a>
        </td>
    </tr>
}

<!-- JAVA MEUK -->
@section Scripts {
    <script>
        function UpdateOrganisatie() {
            $("#organisatie tr").each(function (i, org) {
                $orgType = $(org).data("type");

                var shouldDelete = true;

                $("#werkvorm option:selected").each(function (i, selected) {
                    $selected_type = $(selected).data("type");

                    if ($selected_type == $orgType)
                        shouldDelete = false;
                })

                if (shouldDelete)
                    $(org).closest("tr").remove();
            });

            $("#werkvorm option:selected").each(function (i, selected) {
                $selected_type = $(selected).data("type");

                var shouldAdd = true;

                $("#organisatie tr").each(function (i, org) {
                    $orgType = $(org).data("type");

                    if ($selected_type == $orgType)
                        shouldAdd = false;
                })

                if (shouldAdd) {
                    var newRow = "<tr data-type='" + $selected_type + "'>";
                    newRow += "<td><input class='form-control text-box single-line' disabled='disabled' id='werkvorm_WerkvormType' name='werkvorm.WerkvormType' type='text' value='" + $selected_type + "'></td>"
                    newRow += "<td><input class='form-control text-box single-line' id='werkvorm_Organisatie' name='werkvorm.Organisatie' type='text'></td>"
                    newRow += "</tr>"

                    $("#organisatie tbody").append(newRow)
                }
            });
        }

        function AddRow(targettable, values) {
            UpdateOrganisatie();
        }

        function calulcateTotal(columnName) {
            var sum = 0;
            $('.' + columnName).each(function () {
                sum += parseFloat($(this).val()) || 0;
            });
            $('#' + columnName + 'Total').html(sum)
        }

        //initial count
        calulcateTotal('SBU');

        //after change
        $('body').on('change', '.SBU', function () {
            calulcateTotal('SBU');
        });


        $("#werkvorm").on("change", function (e) {
            UpdateOrganisatie();
        })


        $("#module_edit_form").submit(function () {
            $hidden_leerlijnen = $("#hidden-leerlijnen");
            $hidden_voorkennis = $("#hidden-voorkennis");
            $hidden_tags = $("#hidden-tags");
            $hidden_kwaliteitskenmerken = $("#hidden-kwaliteitskenmerken");
            $hidden_docenten = $("#hidden-docenten");
            $hidden_werkvormen = $("#hidden-werkvormen");

            $hidden_leerlijnen.empty();
            $hidden_voorkennis.empty();
            $hidden_tags.empty();
            $hidden_kwaliteitskenmerken.empty();
            $hidden_werkvormen.empty();

            var index = 0;

            $("#werkvorm option:selected").each(function (i, selected) {
                var wvType = $(selected).data("type");

                var organisatie = "";

                $("#organisatie tr").each(function (i, org) {
                    var orgType = $(org).data("type");

                    if (orgType == wvType) {
                        var findAttempt = $(org).find("input[name='werkvorm.Organisatie']").val();
                        if (findAttempt != "")
                            organisatie = findAttempt;
                    }

                })

                var newRow1 = "<input name='Module.ModuleWerkvormen[" + index + "].Organisatie' type='hidden' value='" + organisatie + "'>";
                var newRow2 = "<input name='Module.ModuleWerkvormen[" + index + "].Schooljaar' type='hidden' value='@Model.Module.Schooljaar'>";
                var newRow3 = "<input name='Module.ModuleWerkvormen[" + index + "].CursusCode' type='hidden' value='@Model.Module.CursusCode'>";
                var newRow4 = "<input name='Module.ModuleWerkvormen[" + index + "].WerkvormType' type='hidden' value='" + wvType + "'>";



                $hidden_werkvormen.append(newRow1 + newRow2 + newRow3 + newRow4);
                ++index;
            })


            index = 0;

            $("#leerlijnen option:selected").each(function (i, selected) {

                var newRow1 = "<input name='Module.Leerlijnen[" + index + "].Naam' type='hidden' value=" + $(selected).text() + ">";
                var newRow2 = "<input name='Module.Leerlijnen[" + index + "].Schooljaar' type='hidden' value='@Model.Module.Schooljaar'>";

                $hidden_leerlijnen.append(newRow1 + newRow2);

                ++index;
            });

            index = 0;

            $("#voorkennis option:selected").each(function (i, selected) {
                console.log(selected);
                var newRow1 = "<input name='Module.Voorkennis[" + index + "].Naam' type='hidden' value=" + $(selected).text() + ">";
                var newRow2 = "<input name='Module.Voorkennis[" + index + "].Schooljaar' type='hidden' value='@Model.Module.Schooljaar'>";
                var newRow3 = "<input name='Module.Voorkennis[" + index + "].CursusCode' type='hidden' value='" + $(selected).attr('value') + "'>";

            $hidden_voorkennis.append(newRow1 + newRow2 + newRow3);

            ++index;
        });

        index = 0;

        $("#docenten option:selected").each(function (i, selected) {

            var newRow1 = "<input name='Module.Docenten[" + index + "].Id' type='hidden' value=" + $(selected).val() + ">";
            $hidden_docenten.append(newRow1);

            ++index;
        });

        index = 0;

        $("#tags option:selected").each(function (i, selected) {
            $hidden_tags.append("<input name='Module.Tags[" + index + "].Naam' type='hidden' value=" + $(selected).text() + ">");
            ++index;
        });

        $(".leerdoelTemplate:not(.hiddenLeerdoel) .kwaliteitskenmerken").each(function (i, kenmerk) {
            $(kenmerk).find('option:selected').each(function (j, selected) {
                $hidden_kwaliteitskenmerken.append('<input name="Module.Leerdoelen[' + i + '].Kwaliteitskenmerken[' + j + '].Id" type="hidden" value="' + $(selected).val() + '">');
            });
        });
    });

    $(".row_add").click(function () {

        var target = $(this).data("target");
        var columns = $(this).data("columns");
        var collName = $(this).data("collectionname");
        var properties = $(this).data("properties");
        var newIndex = $(this).data("nextindex")

        var options = $(this).data("options");



        var newRow = "<tr>";


        if (columns == properties.length) {
            if (columns == 1 && typeof (options) != 'undefined') {
                newRow += "<td><select>";
                for (var optionName in options) {
                    newRow += "<option>" + optionName + "</option>"
                }
                newRow += "</select>"
            }
            else {
                for (var i = 0; i < columns; i++) {
                    newRow += "<td><input class='form-control " + properties[i] + "' id='Module_" + collName + "_" + newIndex + "_" + properties[i] + "' name='Module." + collName + "[" + newIndex + "]." + properties[i] + "' type='text'>"

                    if (i != (columns - 1))
                        newRow += "</td>";
                }
            }
        }

        newRow += "<input name='Module." + collName + ".Index' type='hidden' value='" + newIndex + "'>";
        newRow += "<input id='Module_" + collName + "_" + newIndex + "__CursusCode' name='Module." + collName + "[" + newIndex + "].CursusCode' type='hidden' value='@Model.Module.CursusCode'>";
            newRow += "<input id='Module_" + collName + "_" + newIndex + "__Schooljaar' name='Module." + collName + "[" + newIndex + "].Schooljaar' type='hidden' value='@Model.Module.Schooljaar'>";

            newRow += "</td>"

            newRow += "<td style='width: 90px; text-align:center'><a class='btn btn-danger btn-sm remove_row'><i class='fa fa-trash'></i></a></td>"

            newRow += "</tr>";

            $("#" + target + " tr:last").before(newRow);

            $(this).data("nextindex", newIndex + 1);

        });

        $(document).on("click", ".remove_row", function () {
            var self = $(this);
            self.closest("tr").remove();
        });

        $(function () {
            // SELECT2
            $("#leerlijnen").select2({
                placeholder: "Leerlijnen"
            });

            $("#tags").select2({
                placeholder: "Tags"
            });

            select2Competenties();

            $("#werkvorm").select2({
                placeholder: "Werkvorm"
            });

            $("#voorkennis").select2({
                placeholder: "Voorkennis"
            });

            $("#docenten").select2({
                placeholder: "Docenten"
            })
        });

        $('#btn_AddLeerdoel').click(function () {
            var lastRow = $('#leerdoelen .leerdoelTemplate:last');
            var template = $('#leerdoelen .leerdoelTemplate.hiddenLeerdoel');
            var nextIndex = $('#leerdoelen .leerdoelTemplate').length - 1; // -1 for the hidden one.

            var newElement = $(template[0].outerHTML.replace(new RegExp('<<index>>', 'g'), nextIndex));

            newElement.toggleClass("hiddenLeerdoel");
            lastRow.after(newElement);
            select2Competenties(newElement);
        });

        function select2Competenties(el) {
            var element;
            if (el)
                element = el.find(".kwaliteitskenmerken");
            else
                element = $(".leerdoelTemplate:not(.hiddenLeerdoel) .kwaliteitskenmerken");

            element.select2({
                placeholder: "Competenties",
                templateSelection: formatTags,
                templateResult: formatTags,
                escapeMarkup: function (m) {
                    return m;
                }
            });
        }

        function formatTags(data) {
            var slashIndex = data.text.indexOf('/') + 1;
            var splitIndex = data.text.indexOf(':') + 1;
            return '<b>' + data.text.substring(0, slashIndex) +
                    '<i>' + data.text.substring(slashIndex, splitIndex) + '</i>' +
                   '</b> ' + data.text.substring(splitIndex);
        }
    </script>

}