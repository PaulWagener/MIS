@using ModuleManager.DomainDAL
@model  ModuleManager.Web.ViewModels.PartialViewModel.ModuleCrudViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
    <h4 class="modal-title" id="ModuleAdd">Module toevoegen</h4>
</div>

@using (Html.BeginForm())
{
    <div class="modal-body">
        @Html.AntiForgeryToken()

           <div class="form-group">
            @Html.LabelFor(model => model.CursusCode)
            <table class="form-group-prefix">
                <tr>
                    <td class="prefix">@Html.EditorFor(model => model.OpleidingsPrefix, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td class="dash" >-</td>
                    <td>@Html.EditorFor(model => model.CursusCode, new { htmlAttributes = new { @class = "form-control" } })</td>
                    
                </tr>
            </table>           
            @Html.ValidationMessageFor(model => model.CursusCode, "", new { @class = "text-danger" })
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Naam)
            @Html.EditorFor(model => model.Naam, new { htmlAttributes = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.Naam, "", new { @class = "text-danger" })
        </div>
        
     
        
        <div class="form-group">
            <label for="Toetscodes">Toetscodes & Studiepunten</label>
            
            <div class="row">
                <div class="col-md-6">
                    <table class="form-group-prefix">
                        <tr>
                            <td>@Html.EditorFor(model => model.Toetscode1Prefix, new { htmlAttributes = new { @class = "form-control" } })</td>
                            <td class="dash">-</td>
                            <td>@Html.EditorFor(model => model.Toetscode1, new { htmlAttributes = new { @class = "form-control", placeholder = "Toetscode 1" } })</td>
                        </tr>
                    </table>    
                    @Html.ValidationMessageFor(model => model.Toetscode1, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Ec1, new { htmlAttributes = new { @class = "form-control", type = "number", required = "required", placeholder = "Studiepunten 1" } })
                    @Html.ValidationMessageFor(model => model.Ec1, "", new { @class = "text-danger" })
                </div>
            </div><br />
            <div class="row">
                <div class="col-md-6">
                    <table class="form-group-prefix">
                        <tr>
                            <td>@Html.EditorFor(model => model.Toetscode2Prefix, new { htmlAttributes = new { @class = "form-control" } })</td>
                            <td class="dash">-</td>
                            <td>@Html.EditorFor(model => model.Toetscode2, new { htmlAttributes = new { @class = "form-control", placeholder = "Toetscode 2" } })</td>
                        </tr>
                    </table>
                    @Html.ValidationMessageFor(model => model.Toetscode2, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Ec2, new { htmlAttributes = new { @class = "form-control", type = "number", required = "required", placeholder = "Studiepunten 2" } })
                    @Html.ValidationMessageFor(model => model.Ec2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Verantwoordelijke)
            @Html.EditorFor(model => model.Verantwoordelijke, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Verantwoordelijke, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Fases")

            <table class="table table-bordered" id="fases">
                <thead>
                    <tr>
                        <th>Fase</th>
                        <th>Blok</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.FaseModules.Count(); i++)
                    {
                        <tr>
                            <td>
                                Kies de fase
                            </td>
                            <td>
                                Kies de fase
                            </td>
                            <td style="width: 90px; text-align:center">
                                <a class="btn btn-danger btn-sm remove_row" id="removeFaseModule"><i class="fa fa-trash"></i></a>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td style="width: 90px; text-align:right; padding-right:30px" colspan="5">
                            <button id="addFaseModule" class="btn btn-success row_add" type="button"><i class="fa fa-plus"></i></button>
                        </td>
                    </tr>
                </tbody>
            </table>
      

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Onderdelen)
                <select name="Onderdeel" class="form-control ajax" id="Onderdeel">
                    @foreach (var onderdeel in Model.Onderdelen)
                {
                        <option>@onderdeel.Code</option>
                    }
                </select>
            </div>

            <div class="row">
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Icons)
                        <select name="Icon" class="form-control ajax" id="Icon">
                            @foreach (var blok in Model.Icons)
                            {
                                <option>@blok.Icon</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <i id="iconPlaceholder" class="fa fa-3x"></i>
                </div>
            </div>



        </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Annuleren</button>
        <input class="btn btn-success" type="submit" value="Toevoegen" />
    </div>
}

@section Scripts{

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/modalform")


}

<script>
    $("#SelectedFases").select2({
        placeholder: "Fases"
    });

    $("#CursusCode").on('input',function () {
        $("#Toetscode1Prefix").val($("#CursusCode").val());
        $("#Toetscode2Prefix").val($("#CursusCode").val());
    });

    $('#fases').on('click', '.remove_row', function () {
        $(this).closest("tr").remove();
    });

    debugger;
    var nextFaseModuleIndex = @Model.FaseModules.Count();
    $('#addFaseModule').on('click', function () {
        var row =  $('<tr>');
        row.append("<td>Kies Fase</td>");
        row.append("<td>Kies blok</td>");
        //Delete button
        row.append('<td style="width: 90px; text-align:center"><a class="btn btn-danger btn-sm remove_row"><i class="fa fa-trash"></i></a></td>');
        $('#fases tr:last').before(row);
    })
</script>